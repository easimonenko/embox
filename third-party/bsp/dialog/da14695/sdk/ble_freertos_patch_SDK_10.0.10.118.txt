diff -aur SDK_10.0.10.118/sdk/bsp/system/sys_man/include/sys_clock_mgr.h ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/bsp/system/sys_man/include/sys_clock_mgr.h
--- SDK_10.0.10.118/sdk/bsp/system/sys_man/include/sys_clock_mgr.h	2020-07-07 07:08:18.000000000 +0300
+++ ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/bsp/system/sys_man/include/sys_clock_mgr.h	2020-08-28 12:38:07.721338883 +0300
@@ -254,6 +254,8 @@
  */
 void cm_rcx_trigger_calibration(void);
 #endif
+#endif /* OS_FREERTOS */
+
 /**
  * \brief Initialize the Low Power clock.
  *
@@ -298,7 +300,6 @@
  */
 __RETAINED_CODE void cm_lp_clk_wakeup(void);
 
-#endif /* OS_FREERTOS */
 
 /**
  * \brief Block until the PLL is locked. If the PLL is locked then the function exits
diff -aur SDK_10.0.10.118/sdk/interfaces/ble/adapter/src/ad_ble.c ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/adapter/src/ad_ble.c
--- SDK_10.0.10.118/sdk/interfaces/ble/adapter/src/ad_ble.c	2020-07-07 07:08:18.000000000 +0300
+++ ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/adapter/src/ad_ble.c	2020-08-28 12:38:07.721338883 +0300
@@ -19,8 +19,8 @@
 #include "ble_config.h"
 
 #include "osal.h"
-#include "queue.h"
-#include "event_groups.h"
+//#include "queue.h" /* FreeRTOS */
+//#include "event_groups.h" /* FreeRTOS */
 #if (BLE_WINDOW_STATISTICS == 1) || (BLE_SLEEP_PERIOD_DEBUG == 1)
 #include "logging.h"
 #endif
@@ -247,6 +247,7 @@
         OS_TASK_NOTIFY(adapter_if.task, mainBIT_EVENT_QUEUE_AVAIL, OS_NOTIFY_SET_BITS);
 }
 
+#include "interrupts.h"
 void ad_ble_task_notify(uint32_t value)
 {
         if (in_interrupt()) {
@@ -494,7 +495,7 @@
                 /* Check if we should call the previously skipped TX done callback */
                 if (ulNotifiedValue & mainBIT_EVENT_QUEUE_AVAIL) {
                         sleep_status = BLE_ACTIVE;
-                        if (ad_ble_stack_wr_cb && uxQueueSpacesAvailable(adapter_if.evt_q)) {
+                        if (ad_ble_stack_wr_cb && OS_QUEUE_SPACES_AVAILABLE(adapter_if.evt_q)) {
                                 /* Call pending BLE stack write callback */
                                 ad_ble_stack_wr_cb(BLE_STACK_IO_OK);
 
@@ -535,7 +536,7 @@
 
                 if (ulNotifiedValue & mainBIT_COMMAND_QUEUE) {
                         /* The message may have already been read in the while () loop below! */
-                        if ( OS_QUEUE_GET(adapter_if.cmd_q, &received_msg, 0)) {
+                        if ( OS_QUEUE_GET(adapter_if.cmd_q, &received_msg, 0) == OS_QUEUE_OK) {
                                 /* Make sure a valid OP CODE is received */
                                 OS_ASSERT(received_msg->op_code < AD_BLE_OP_CODE_LAST);
                                 current_op = received_msg->op_code;
@@ -586,7 +587,7 @@
 
 
                         /* Check command queue for incoming messages */
-                        if (uxQueueMessagesWaiting(adapter_if.cmd_q)) {
+                        if (OS_QUEUE_MESSAGES_WAITING(adapter_if.cmd_q)) {
                                 /* Get message from the command queue. */
                                 OS_QUEUE_GET(adapter_if.cmd_q, &received_msg, 0);
                                 /* Make sure a valid op code is received */
@@ -967,7 +968,7 @@
                         /* Post item to queue. */
                         if (ad_ble_event_queue_send(&msgBuf, 0) == OS_OK) {
                                 /* Check free space on BLE adapter's event queue. */
-                                if (uxQueueSpacesAvailable(adapter_if.evt_q)) {
+                                if (OS_QUEUE_SPACES_AVAILABLE(adapter_if.evt_q)) {
                                         /* Call BLE stack I/O TX done callback right away. */
                                         callback(BLE_STACK_IO_OK);
                                 } else {
diff -aur SDK_10.0.10.118/sdk/interfaces/ble/api/include/ble_l2cap.h ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/api/include/ble_l2cap.h
--- SDK_10.0.10.118/sdk/interfaces/ble/api/include/ble_l2cap.h	2020-07-07 07:08:18.000000000 +0300
+++ ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/api/include/ble_l2cap.h	2020-08-28 12:38:07.721338883 +0300
@@ -21,6 +21,7 @@
 #define BLE_L2CAP_H_
 
 #include <stdint.h>
+#include <sdk_defs.h>
 #include "ble_common.h"
 #include "ble_gap.h"
 
diff -aur SDK_10.0.10.118/sdk/interfaces/ble/api/src/ble_gap.c ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/api/src/ble_gap.c
--- SDK_10.0.10.118/sdk/interfaces/ble/api/src/ble_gap.c	2020-07-07 07:08:18.000000000 +0300
+++ ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/api/src/ble_gap.c	2020-08-28 12:38:07.721338883 +0300
@@ -13,7 +13,7 @@
  */
 
 #include <string.h>
-#include "FreeRTOS.h"
+//#include "FreeRTOS.h"
 #include "ble_common.h"
 #include "osal.h"
 #include "ble_gap.h"
diff -aur SDK_10.0.10.118/sdk/interfaces/ble/manager/src/ble_mgr.c ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/manager/src/ble_mgr.c
--- SDK_10.0.10.118/sdk/interfaces/ble/manager/src/ble_mgr.c	2020-07-07 07:08:18.000000000 +0300
+++ ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/manager/src/ble_mgr.c	2020-08-28 12:38:07.721338883 +0300
@@ -17,10 +17,10 @@
 #include "ble_config.h"
 #include "ble_stack_config.h"
 
-#include "FreeRTOS.h"
-#include "task.h"
-#include "queue.h"
-#include "semphr.h"
+//#include "FreeRTOS.h"
+//#include "task.h"
+//#include "queue.h"
+//#include "semphr.h"
 
 #include "sdk_list.h"
 #include "ble_common.h"
@@ -238,13 +238,13 @@
 
                 if (ulNotifiedValue & mainBIT_ADAPTER_EVENT_QUEUE) {
                         /* Make sure there are messages waiting on the queue */
-                        if (!uxQueueMessagesWaiting(adapter_if->evt_q)) {
+                        if (!OS_QUEUE_MESSAGES_WAITING(adapter_if->evt_q)) {
                                 goto no_event;
                         }
 
                         /* Check if there is free space on BLE manager's event queue */
 #if (BLE_MGR_USE_EVT_LIST == 0)
-                        if (uxQueueSpacesAvailable(mgr_if.evt_q))
+                        if (OS_QUEUE_SPACES_AVAILABLE(mgr_if.evt_q))
 #endif /* (BLE_MGR_USE_EVT_LIST == 0) */
                         {
                                 /* Get message from queue */
@@ -324,7 +324,7 @@
                                  * Check if there are more messages waiting in the BLE adapter's
                                  * event queue.
                                  */
-                                if (uxQueueMessagesWaiting(adapter_if->evt_q)) {
+                                if (OS_QUEUE_MESSAGES_WAITING(adapter_if->evt_q)) {
                                         OS_TASK_NOTIFY(mgr_if.task,
                                                 mainBIT_ADAPTER_EVENT_QUEUE, OS_NOTIFY_SET_BITS);
                                 }
@@ -339,7 +339,7 @@
 no_event:
 #if ((BLE_MGR_DIRECT_ACCESS == 0) || (defined(BLE_STACK_PASSTHROUGH_MODE)))
                 if (ulNotifiedValue & mainBIT_MANAGER_COMMAND_QUEUE) {
-                        if (uxQueueMessagesWaiting(mgr_if.cmd_q)) {
+                        if (OS_QUEUE_MESSAGES_WAITING(mgr_if.cmd_q)) {
                                 ble_mgr_msg_hdr_t *cmd;
 
                                 /* Get command from the queue */
@@ -363,7 +363,7 @@
 #if (BLE_MGR_USE_EVT_LIST == 0)
                 if (ulNotifiedValue & mainBIT_EVENT_CONSUMED) {
                         /* Check if blocked and if there is space on the event queue */
-                        if (ble_mgr_blocked && uxQueueSpacesAvailable(mgr_if.evt_q)) {
+                        if (ble_mgr_blocked && OS_QUEUE_SPACES_AVAILABLE(mgr_if.evt_q)) {
                                 /* Set flag to false */
                                 ble_mgr_blocked = false;
 
@@ -392,7 +392,7 @@
 #endif
 
                 /* Check if BLE adapter is blocked and if there is free space on its event queue */
-                if (ble_mgr_adapter_is_blocked() && uxQueueSpacesAvailable(adapter_if->evt_q)) {
+                if (ble_mgr_adapter_is_blocked() && OS_QUEUE_SPACES_AVAILABLE(adapter_if->evt_q)) {
                         /* Notify BLE adapter that there is free space on its event queue */
                         ad_ble_notify_event_queue_avail();
                 }
@@ -420,13 +420,13 @@
 
         /* Create needed mutexes */
         (void) OS_MUTEX_CREATE(ble_interface_lock);
-        configASSERT(ble_interface_lock);
+        OS_ASSERT(ble_interface_lock);
 #ifndef BLE_STACK_PASSTHROUGH_MODE
         (void) OS_MUTEX_CREATE(ble_dev_params_lock);
-        configASSERT(ble_dev_params_lock);
+        OS_ASSERT(ble_dev_params_lock);
 #if (BLE_MGR_DIRECT_ACCESS == 1)
         (void) OS_MUTEX_CREATE(ble_waitqueue_lock);
-        configASSERT(ble_waitqueue_lock);
+        OS_ASSERT(ble_waitqueue_lock);
 #endif /* (BLE_MGR_DIRECT_ACCESS == 1) */
 
         /* Set default BLE device parameters */
diff -aur SDK_10.0.10.118/sdk/interfaces/ble/manager/src/ble_mgr_ad_msg.c ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/manager/src/ble_mgr_ad_msg.c
--- SDK_10.0.10.118/sdk/interfaces/ble/manager/src/ble_mgr_ad_msg.c	2020-07-07 07:08:18.000000000 +0300
+++ ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/manager/src/ble_mgr_ad_msg.c	2020-08-28 12:38:07.721338883 +0300
@@ -13,7 +13,7 @@
  */
 
 #include <string.h>
-#include "FreeRTOS.h"
+//#include "FreeRTOS.h"
 #include "ble_stack_config.h"
 #include "ble_common.h"
 #include "ble_mgr_helper.h"
diff -aur SDK_10.0.10.118/sdk/interfaces/ble/manager/src/ble_mgr_common.c ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/manager/src/ble_mgr_common.c
--- SDK_10.0.10.118/sdk/interfaces/ble/manager/src/ble_mgr_common.c	2020-07-07 07:08:18.000000000 +0300
+++ ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/manager/src/ble_mgr_common.c	2020-08-28 12:38:07.721338883 +0300
@@ -13,6 +13,9 @@
  */
 
 #include <string.h>
+
+#include <sdk_defs.h>
+
 #include "ble_stack_config.h"
 #include "ad_ble_msg.h"
 #include "ble_mgr.h"
diff -aur SDK_10.0.10.118/sdk/interfaces/ble/manager/src/ble_mgr_gtl.c ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/manager/src/ble_mgr_gtl.c
--- SDK_10.0.10.118/sdk/interfaces/ble/manager/src/ble_mgr_gtl.c	2020-07-07 07:08:18.000000000 +0300
+++ ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/manager/src/ble_mgr_gtl.c	2020-08-28 12:38:07.721338883 +0300
@@ -13,7 +13,7 @@
  */
 
 #include <string.h>
-#include "FreeRTOS.h"
+//#include "FreeRTOS.h"
 #include "co_version.h"
 #include "ble_stack_config.h"
 
diff -aur SDK_10.0.10.118/sdk/interfaces/ble/manager/src/ble_mgr_helper.c ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/manager/src/ble_mgr_helper.c
--- SDK_10.0.10.118/sdk/interfaces/ble/manager/src/ble_mgr_helper.c	2020-07-07 07:08:18.000000000 +0300
+++ ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/manager/src/ble_mgr_helper.c	2020-08-28 12:38:07.721338883 +0300
@@ -13,6 +13,9 @@
  */
 
 #include <string.h>
+
+#include <sdk_defs.h>
+
 #include "ble_mgr.h"
 #include "ble_mgr_config.h"
 #include "ble_mgr_cmd.h"
diff -aur SDK_10.0.10.118/sdk/interfaces/ble/manager/src/storage.c ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/manager/src/storage.c
--- SDK_10.0.10.118/sdk/interfaces/ble/manager/src/storage.c	2020-07-07 07:08:18.000000000 +0300
+++ ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/manager/src/storage.c	2020-08-28 12:38:07.725338841 +0300
@@ -13,7 +13,7 @@
  */
 
 #include <string.h>
-#include "FreeRTOS.h"
+//#include "FreeRTOS.h"
 #include "osal.h"
 #include "ble_mgr.h"
 #include "storage.h"
diff -aur SDK_10.0.10.118/sdk/interfaces/ble/manager/src/storage_flash.c ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/manager/src/storage_flash.c
--- SDK_10.0.10.118/sdk/interfaces/ble/manager/src/storage_flash.c	2020-07-07 07:08:18.000000000 +0300
+++ ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/manager/src/storage_flash.c	2020-08-28 12:38:07.725338841 +0300
@@ -13,7 +13,7 @@
  */
 
 #include <string.h>
-#include "FreeRTOS.h"
+//#include "FreeRTOS.h"
 #include "osal.h"
 #include "ble_config.h"
 #include "storage.h"
diff -aur SDK_10.0.10.118/sdk/interfaces/ble/stack/config/ble_stack_config.h ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/stack/config/ble_stack_config.h
--- SDK_10.0.10.118/sdk/interfaces/ble/stack/config/ble_stack_config.h	2020-07-07 07:08:18.000000000 +0300
+++ ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/stack/config/ble_stack_config.h	2020-08-28 12:38:07.725338841 +0300
@@ -23,6 +23,7 @@
 
 #include "ble_config.h"
 
+#include <sdk_defs.h>
 
 #define RAM_BUILD
 
diff -aur SDK_10.0.10.118/sdk/interfaces/ble/stack/da14690/src/arch_main.c ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/stack/da14690/src/arch_main.c
--- SDK_10.0.10.118/sdk/interfaces/ble/stack/da14690/src/arch_main.c	2020-07-07 07:08:18.000000000 +0300
+++ ../build/extbld/third_party/bsp/dialog/da14695/sdk/SDK_10.0.10.118/sdk/interfaces/ble/stack/da14690/src/arch_main.c	2020-08-28 12:42:45.823065560 +0300
@@ -52,7 +52,7 @@
 void lib_ble_stack_reset(uint8_t reset_type);
 bool cmac_cpu_wakeup(void);
 
-void timer_init(void);
+static void ble_timer_init(void);
 void ble_timer_callback(void* varg);
 
 bool ke_sleep_check(void);
@@ -353,7 +353,7 @@
         }
 
         /* Initialize BLE timer */
-        timer_init();
+        ble_timer_init();
 
         /* Initialize BLE stack (Controller and Host) */
         lib_ble_stack_init();
@@ -479,7 +479,7 @@
 /*
  * @brief Initialize BLE timer
  */
-void timer_init(void)
+static void ble_timer_init(void)
 {
         ble_timer = OS_TIMER_CREATE("ble_tmr", 100 /* Dummy */, 0, 0, ble_timer_callback);
         OS_ASSERT(ble_timer);
@@ -568,4 +568,7 @@
 #endif
 }
 
+void crypto_init(void) {
+}
+
 #endif /* CONFIG_USE_BLE */
